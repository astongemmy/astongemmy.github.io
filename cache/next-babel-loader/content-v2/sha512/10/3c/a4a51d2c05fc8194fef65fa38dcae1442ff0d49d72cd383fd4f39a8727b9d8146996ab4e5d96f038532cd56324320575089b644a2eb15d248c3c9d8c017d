{"ast":null,"code":"export default function useIntersectionObserver({\n  parentContainerRef\n}) {\n  const observer = new IntersectionObserver(function (entries) {\n    const targetId = entries[0].target.id;\n    const sectionActivator = document.querySelector(`[data-target=\"${targetId}\"]`);\n\n    if (entries[0].isIntersecting == true) {\n      sectionActivator.classList.add('border-gray-400');\n      scrollToActivator(sectionActivator);\n    } else {\n      sectionActivator.classList.remove('border-gray-400');\n    }\n  }, {\n    threshold: [0.3]\n  });\n  const observed = parentContainerRef.current.childNodes;\n  observed.forEach(element => observer.observe(element));\n}\n\nconst scrollToActivator = activator => {\n  const activatorParent = activator.parentElement.parentElement;\n  const activatorParentRect = activatorParent.getBoundingClientRect();\n  const activatorRect = activator.getBoundingClientRect();\n  const activatorLeftOffset = activatorRect.left - activatorParentRect.left;\n  activatorParent.scrollTo({\n    left: activatorLeftOffset - 20,\n    behavior: 'smooth'\n  });\n};","map":null,"metadata":{},"sourceType":"module"}